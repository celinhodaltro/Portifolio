<MudContainer MaxWidth="MaxWidth.Large" Class="my-10">
    <MudGrid GutterSize="3">
        @foreach (var skill in Skills)
        {
            <MudItem xs="12" sm="6" md="4">
                <MudCard Class="skill-card" Style="background:rgba(255,255,255,0.02); backdrop-filter:blur(4px); border-radius: 20px;">
                    <MudCardContent Class="d-flex flex-column align-center justify-center py-6">
                        <MudText Typo="Typo.h6" Class="text-center mb-2" Style="color:white">@skill.Name</MudText>

                        <MudProgressCircular Value="@skill.Level" Size="Size.Medium" Color="Color.Primary" Thickness="4"
                                             Class="my-3"
                                             Style="--mud-pc-track-color:rgba(255,255,255,0.1); --mud-pc-color:#00d4ff;">
                            <div style="color:white; font-weight:bold; font-size:0.8rem;">
                                @skill.Level%
                            </div>
                        </MudProgressCircular>


                        <MudText Typo="Typo.caption" Style="color:#00ffaa">
                            <MudIcon Icon="@Icons.Material.Filled.Star" Size="Size.Small" />
                            @GetSeniority(skill)
                        </MudText>


                        <MudText Typo="Typo.caption" Style="color:white">
                            <MudIcon Icon="@Icons.Material.Filled.Schedule" Size="Size.Small" />
                            @skill.Duration
                        </MudText>

                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
</MudContainer>


@code {


    private List<Skill> Skills = new()
    {
        new Skill { Name = "ASP.NET", Level = 85, Duration = "4 years" },
        new Skill { Name = "Blazor", Level = 55, Duration = "3 years" },
        new Skill { Name = "Angular", Level = 50, Duration = "4 years" },
        new Skill { Name = "JavaScript", Level = 30, Duration = "4 years" },
        new Skill { Name = "HTML | CSS", Level = 40, Duration = "4 years" },
        new Skill { Name = "Devops", Level = 50, Duration = "1 year" },
        new Skill { Name = "DBA", Level = 40, Duration = "4 years" },
    };

    private string GetSeniority(Skill skill)
    {
        int durationInMonths = 0;

        if (skill.Duration.Contains("year"))
        {
            var years = int.Parse(new string(skill.Duration.Where(char.IsDigit).ToArray()));
            durationInMonths = years * 12;
        }
        else if (skill.Duration.Contains("month"))
        {
            durationInMonths = int.Parse(new string(skill.Duration.Where(char.IsDigit).ToArray()));
        }

        var QualifyRate = (durationInMonths / 10) + (skill.Level / 10);

        if (QualifyRate < 5)
            return "Trainer";
        else if (QualifyRate < 10)
            return "Junior";
        else if (QualifyRate < 15)
            return "Pleno";
        else
            return "Sênior";
    }


}


<style>
    .skill-card {
        background: rgba(255, 255, 255, 0.02);
        backdrop-filter: blur(6px);
        border-radius: 20px;
        border: 1px solid rgba(255,255,255,0.08);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .skill-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 20px rgba(0, 212, 255, 0.2);
        }
</style>