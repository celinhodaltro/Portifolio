<div id="projects" class="section-projects">
    <MudText Class="mb-5 text-white" Align="Align.Center" Typo="Typo.h4">PROJETOS</MudText>
    <MudDivider Class="mb-5" />

    <!-- Layout Desktop - Carousel -->
    <div class="projects-desktop d-none d-lg-block">
        <MudCarousel TData="ProjectModel"
                     AutoCycle="false"
                     ShowArrows="true"
                     ShowIndicators="false"
                     Class="project-carousel"
                     Style="margin-top: 100px; margin-bottom: 100px;">
            @foreach (var group in ProjectsList.Chunk(4))
            {
                <MudCarouselItem>
                    <div class="carousel-group">
                        @foreach (var project in group)
                        {
                            <MudCard Class="project-card hover-elevation-8 transition"
                                     Style="background: rgba(255,255,255,0.09);
                                                    border-radius: 16px;
                                                    backdrop-filter: blur(6px);
                                                    border: 1px solid rgba(255,255,255,0.1);">
                                <img src="@project.Image"
                                     style="width:100%;height:180px;object-fit:cover;
                                                    border-top-left-radius:16px;border-top-right-radius:16px;" />

                                <MudCardContent Class="text-center">
                                    <MudText Typo="Typo.h6" Class="text-white mb-2">@project.Title</MudText>
                                    <MudText Typo="Typo.body2" Class="text-white mb-3">@project.Description</MudText>

                                    <div class="d-flex flex-wrap gap-1 mb-3 justify-center">
                                        @foreach (var tech in project.Technologies)
                                        {
                                            <MudChip T="string" Size="Size.Small" Color="Color.Primary" Text="@tech" />
                                        }
                                    </div>

                                    <MudCardActions Class="d-flex justify-space-between">
                                        @if (!string.IsNullOrEmpty(project.DemoUrl))
                                        {
                                            <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                                                       StartIcon="@Icons.Material.Filled.Launch"
                                                       Href="@project.DemoUrl" Target="_blank">
                                                Demo
                                            </MudButton>
                                        }
                                        @if (!string.IsNullOrEmpty(project.GitHubUrl))
                                        {
                                            <MudButton Variant="Variant.Outlined" Color="Color.Secondary"
                                                       StartIcon="@Icons.Custom.Brands.GitHub"
                                                       Href="@project.GitHubUrl" Target="_blank">
                                                GitHub
                                            </MudButton>
                                        }
                                    </MudCardActions>
                                </MudCardContent>
                            </MudCard>
                        }
                    </div>
                </MudCarouselItem>
            }
        </MudCarousel>
    </div>

    <!-- Layout Tablet - Grid 2 colunas -->
    <div class="projects-tablet d-none d-md-block d-lg-none">
        <MudGrid Spacing="3" Class="mt-4">
            @foreach (var project in ProjectsList)
            {
                <MudItem xs="12" sm="6">
                    <MudCard Class="project-card-tablet hover-elevation-8 transition"
                             Style="background: rgba(255,255,255,0.09);
                                            border-radius: 16px;
                                            backdrop-filter: blur(6px);
                                            border: 1px solid rgba(255,255,255,0.1);
                                            height: 100%;">
                        <img src="@project.Image"
                             style="width:100%;height:200px;object-fit:cover;
                                            border-top-left-radius:16px;border-top-right-radius:16px;" />

                        <MudCardContent>
                            <MudText Typo="Typo.h6" Class="text-white mb-2">@project.Title</MudText>
                            <MudText Typo="Typo.body2" Class="text-white mb-3">@project.Description</MudText>

                            <div class="d-flex flex-wrap gap-1 mb-3">
                                @foreach (var tech in project.Technologies)
                                {
                                    <MudChip T="string" Size="Size.Small" Color="Color.Primary" Text="@tech" />
                                }
                            </div>
                        </MudCardContent>

                        <MudCardActions Class="d-flex justify-space-between pa-3">
                            @if (!string.IsNullOrEmpty(project.DemoUrl))
                            {
                                <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.Launch"
                                           Href="@project.DemoUrl" Target="_blank" Size="Size.Small">
                                    Demo
                                </MudButton>
                            }
                            @if (!string.IsNullOrEmpty(project.GitHubUrl))
                            {
                                <MudButton Variant="Variant.Outlined" Color="Color.Secondary"
                                           StartIcon="@Icons.Custom.Brands.GitHub"
                                           Href="@project.GitHubUrl" Target="_blank" Size="Size.Small">
                                    GitHub
                                </MudButton>
                            }
                        </MudCardActions>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    </div>

    <!-- Layout Mobile - Lista vertical -->
    <div class="projects-mobile d-block d-md-none">
        <div class="mobile-projects-container">
            @foreach (var project in ProjectsList)
            {
                <MudCard Class="project-card-mobile mb-4"
                         Style="background: rgba(255,255,255,0.09);
                                        border-radius: 16px;
                                        backdrop-filter: blur(6px);
                                        border: 1px solid rgba(255,255,255,0.1);">
                    <img src="@project.Image"
                         style="width:100%;height:180px;object-fit:cover;
                                        border-top-left-radius:16px;border-top-right-radius:16px;" />

                    <MudCardContent Class="pa-3">
                        <MudText Typo="Typo.h6" Class="text-white mb-2">@project.Title</MudText>
                        <MudText Typo="Typo.body2" Class="text-white mb-3" Style="font-size: 0.875rem; line-height: 1.4;">
                            @project.Description
                        </MudText>

                        <div class="d-flex flex-wrap gap-1 mb-3">
                            @foreach (var tech in project.Technologies.Take(3)) // Limita a 3 tecnologias em mobile
                            {
                                <MudChip T="string" Size="Size.Small" Color="Color.Primary" Text="@tech" />
                            }
                            @if (project.Technologies.Length > 3)
                            {
                                <MudChip T="string" Size="Size.Small" Color="Color.Default" Text="@($"+{project.Technologies.Length - 3}")" />
                            }
                        </div>

                        <div class="d-flex gap-2 flex-wrap">
                            @if (!string.IsNullOrEmpty(project.DemoUrl))
                            {
                                <MudButton Variant="Variant.Outlined" Color="Color.Primary"
                                           StartIcon="@Icons.Material.Filled.Launch"
                                           Href="@project.DemoUrl" Target="_blank" 
                                           Size="Size.Small" FullWidth="false">
                                    Demo
                                </MudButton>
                            }
                            @if (!string.IsNullOrEmpty(project.GitHubUrl))
                            {
                                <MudButton Variant="Variant.Outlined" Color="Color.Secondary"
                                           StartIcon="@Icons.Custom.Brands.GitHub"
                                           Href="@project.GitHubUrl" Target="_blank" 
                                           Size="Size.Small" FullWidth="false">
                                    GitHub
                                </MudButton>
                            }
                        </div>
                    </MudCardContent>
                </MudCard>
            }
        </div>
    </div>
</div>

<style>
    /* Desktop Styles */
    .mud-carousel {
        height: 500px !important;
        overflow: visible !important;
    }

    .carousel-group {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 16px;
        padding: 16px;
        align-items: stretch;
    }

    .project-card {
        transition: transform 0.2s ease, box-shadow 0.3s ease;
        height: 100%;
    }

    .project-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 20px rgba(0, 212, 255, 0.2);
    }

    /* Tablet Styles */
    .project-card-tablet {
        transition: transform 0.2s ease, box-shadow 0.3s ease;
    }

    .project-card-tablet:hover {
        transform: translateY(-3px);
        box-shadow: 0 4px 15px rgba(0, 212, 255, 0.2);
    }

    /* Mobile Styles */
    .mobile-projects-container {
        padding: 0 16px;
    }

    .project-card-mobile {
        transition: transform 0.2s ease, box-shadow 0.3s ease;
        max-width: 100%;
    }

    .project-card-mobile:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(0, 212, 255, 0.15);
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .section-projects {
            padding: 20px 0;
        }
        
        .mobile-projects-container {
            padding: 0 8px;
        }
        
        .project-card-mobile {
            margin-bottom: 20px;
        }
        
        .project-card-mobile img {
            height: 160px !important;
        }
    }

    @@media (max-width: 480px) {
        .mobile-projects-container {
            padding: 0 4px;
        }
        
        .project-card-mobile .mud-card-content {
            padding: 12px !important;
        }
        
        .project-card-mobile img {
            height: 140px !important;
        }
    }
</style>

@code {
    private List<ProjectModel> ProjectsList = new()
    {
        new()
        {
            Title = "Meu Portifólio",
            Description = "Esse porifólio, feito completamente com .NET usando o flamework Blazor.",
            Image = "img/projects/Portifolio.png",
            Technologies = new[] { ".NET", "Blazor", "Devops"},
            DemoUrl = "https://celinhodaltro.github.io/Portifolio/",
            GitHubUrl = ""
        },
        new()
        {
            Title = "Ursulla Bot",
            Description = "Um BOT para ministrar sessões de jogos no Discord, organizando valor por pessoa, classe escolhida e etc.",
            Image = "img/projects/Ursulla Bot.png",
            Technologies = new[] { ".NET", "NetCord", "Postgree"},
            DemoUrl = "",
            GitHubUrl = ""
        },
        new()
        {
            Title = "ExpForge",
            Description = "Uma ferramenta CLI open source para auxiliar desenvolvedores de widgets, geoprocess do arcgis.",
            Image = "img/projects/ExpForge.png",
            Technologies = new[] { ".NET", "Arcgis", "React" },
            DemoUrl = "https://celinhodaltro.github.io/ExpForge.Documentation/",
            GitHubUrl = "https://github.com/celinhodaltro/ExpForge"
        },
        new()
        {
            Title = "Street View",
            Description = "Um Street View para navegação de cenas 3d no Experience Builder, criado na minha atuação na Conder",
            Image = "img/projects/StreetView.png",
            Technologies = new[] { "Arcgis", "React", "GEO" },
            DemoUrl = "",
            GitHubUrl = ""
        },
        new()
        {
            Title = "Informs Devops Center",
            Description = "Centralizador de Rotinas CI/CD do Informs (Conder).",
            Image = "img/projects/Portifolio.png", // Placeholder image
            Technologies = new[] { "Devops", "CI/CD", "Runner"},
            DemoUrl = "",
            GitHubUrl = ""
        }
    };

    public class ProjectModel
    {
        public string Title { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string Image { get; set; } = string.Empty;
        public string[] Technologies { get; set; } = Array.Empty<string>();
        public string DemoUrl { get; set; } = string.Empty;
        public string GitHubUrl { get; set; } = string.Empty;
    }
}
